# -*- coding: utf-8 -*-
"""PythonUrban_lab2_Galkin_N_A.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1G03yIl7SHyQUuWK4-mlyo-xS4bPV3lIY

# Итоговый проект. Улицы. Объекты культурного наследия.
"""

!pip install geopandas
!pip install mapclassify
!pip install osmnx

import geopandas as gpd
import osmnx as ox

TILES = "CartoDB positron"

TERRITORY_NAME = "Приморский район"

KGIOP_FILE_URL = "https://raw.githubusercontent.com/nikgalkins/PythonUrbanITMO/main/geojson%20%D1%81%D0%BB%D0%BE%D0%B8/kgiop_objects.geojson"  # ссылка на слой с объектами культурного наследия
STREETS_FILE_URL = "https://raw.githubusercontent.com/nikgalkins/PythonUrbanITMO/main/geojson%20%D1%81%D0%BB%D0%BE%D0%B8/streets.geojson"  # ссылка на слой с улицами

"""## Территория

### Загрузка территории из OSM (Extract)
"""

osm_id = "R1115367" 
district = ox.geocode_to_gdf([osm_id], by_osmid=True)

"""## Улицы

### Загрузка файла с улицами (Extract)
"""

gdf = gpd.read_file(STREETS_FILE_URL, mask=district)

"""### Обработка данных с улицами (Transform)"""

gdf = gdf.dissolve(by="name")

"""### Сохранение слоя с улицами (Load)"""

gdf.index.rename('Название улицы', inplace=True)

gdf.to_crs(4326).to_file('primorskij_streets.geojson', driver='GeoJSON')

"""## Объекты культурного наследия

### Загрузка объектов культурного наследия (Extract)
"""

gdf2 = gpd.read_file(KGIOP_FILE_URL, mask=district)

"""### Обработка объектов культурного наследия (Transform)"""

gdf2["lon"] = gdf2.to_crs(3857).geometry.centroid.to_crs(4326).x
gdf2["lat"] = gdf2.to_crs(3857).geometry.centroid.to_crs(4326).y

"""### Сохранение слоя с объектами культурного наследия (Load)"""

rename_columns = {
    "id": "Идентификатор",
    "ensemble_name": "Название ансамбля",
    "object_name": "Название объекта",
    "occurrence_time": "Период появления",
    "object_location": "Местоположение",
    "historical_category": "Историческая категория",
    "normative_act": "Нормативный акт",
    "object_type": "Тип объекта",
    "lon": "Долгота",
    "lat": "Широта"
}
gdf2.rename(columns=rename_columns, inplace=True)

gdf2.to_crs(4326).to_file('primorskij_kgiop.geojson', driver='GeoJSON')